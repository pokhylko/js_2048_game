{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","controls","startButton","gameField","messages","startMessage","loseMessage","winMessage","scoreValue","totalScore","arrField","WIN_NUMBER","FIELD_SIZE","rows","columns","ARROWS","createArrField","arrRows","arrColumns","Array","row","column","restartButton","createElement","createRestartButton","classList","add","textContent","createTwoNewItem","newRandomCell","endGame","status","remove","removeKeysListener","buildGameField","fieldCell","cells","randomValue","Math","random","resetScore","calculateScore","cellValue","randomPosition","freeArr","push","checkFreeCell","array","length","floor","isCellEmpty","moveElement","newRow","newColumn","sumElement","processField","callback","moveUp","moveUpRow","startRow","count","moveUpSum","checkUp","moveDown","moveDownRow","moveDownSum","checkDown","moveLeft","moveLeftColumn","startColumn","moveLeftSum","checkLeft","moveRight","moveRightColumn","moveRightSum","checkRight","isLose","addEventListener","event","append","addKeysListener","arrUp","key","up","arrDown","down","arrLeft","left","arrRight","right","removeEventListener"],"mappings":"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","file":"main.0057054d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst controls = container.querySelector('.controls');\nconst startButton = controls.querySelector('.start');\nconst gameField = container.querySelector('.game-field');\nconst messages = container.querySelector('.message-container');\nconst startMessage = messages.querySelector('.message-start');\nconst loseMessage = messages.querySelector('.message-lose');\nconst winMessage = messages.querySelector('.message-win');\nconst scoreValue = container.querySelector('.game-score');\nlet totalScore = 0;\nlet arrField = [];\nconst WIN_NUMBER = 2048;\nconst FIELD_SIZE = {\n  rows: 4,\n  columns: 4,\n};\nconst ARROWS = {\n  'up': 'ArrowUp',\n  'right': 'ArrowRight',\n  'down': 'ArrowDown',\n  'left': 'ArrowLeft',\n};\n\n// Create array field\n\nfunction createArrField(arrRows, arrColumns) {\n  arrField = new Array(arrRows);\n\n  for (let row = 0; row < arrRows; row++) {\n    arrField[row] = new Array(arrColumns);\n\n    for (let column = 0; column < arrColumns; column++) {\n      arrField[row][column] = 0;\n    }\n  }\n}\n\ncreateArrField(FIELD_SIZE.rows, FIELD_SIZE.columns);\n\n// Create restart button\n\nconst restartButton = document.createElement('button');\n\nfunction createRestartButton() {\n  restartButton.classList.add('restart', 'button');\n  restartButton.textContent = 'Restart';\n\n  return restartButton;\n}\n\n// Create two random item\n\nfunction createTwoNewItem() {\n  newRandomCell();\n  newRandomCell();\n}\n\n// Start game & change start button to restart\n\nstartButton.addEventListener('click', event => {\n  startButton.remove();\n  controls.append(createRestartButton());\n  startMessage.classList.add('hidden');\n  createTwoNewItem();\n  processField(buildGameField);\n  addKeysListener();\n});\n\n// Restart game & reset game field\n\nrestartButton.addEventListener('click', event => {\n  loseMessage.classList.add('hidden');\n  resetScore();\n  createArrField(FIELD_SIZE.rows, FIELD_SIZE.columns);\n  createTwoNewItem();\n  processField(buildGameField);\n  addKeysListener();\n});\n\n// Lose message\n\nfunction endGame(status) {\n  if (status === 'win') {\n    winMessage.classList.remove('hidden');\n  }\n\n  if (status === 'lose') {\n    loseMessage.classList.remove('hidden');\n  }\n\n  removeKeysListener();\n}\n\n// Build game field\n\nfunction buildGameField(row, column) {\n  const fieldCell = gameField.rows[row].cells[column];\n\n  if (arrField[row][column] > 0) {\n    fieldCell.classList = ['field-cell'];\n    fieldCell.classList.add(`field-cell--${arrField[row][column]}`);\n    fieldCell.textContent = `${arrField[row][column]}`;\n  } else {\n    fieldCell.classList = ['field-cell'];\n    fieldCell.textContent = '';\n  }\n\n  if (arrField[row][column] === WIN_NUMBER) {\n    endGame('win');\n  }\n}\n\n// 10% random\n\nfunction randomValue() {\n  if (Math.random() <= 0.1) {\n    return 4;\n  } else {\n    return 2;\n  }\n}\n\n// Reset score\n\nfunction resetScore() {\n  totalScore = 0;\n  scoreValue.textContent = totalScore;\n}\n\n// Calculate score\n\nfunction calculateScore(cellValue) {\n  totalScore += cellValue;\n  scoreValue.textContent = totalScore;\n}\n\n// Random position\n\nfunction randomPosition() {\n  const freeArr = [];\n\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = 0; column < FIELD_SIZE.columns; column++) {\n      if (arrField[row][column] === 0) {\n        freeArr.push([row, column]);\n      }\n    }\n  }\n\n  return checkFreeCell(freeArr);\n}\n\n// Check free cell\n\nfunction checkFreeCell(array) {\n  if (array.length > 0) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n}\n\n// New random cell\n\nfunction newRandomCell() {\n  const [ row, column ] = randomPosition();\n  const isCellEmpty = arrField[row][column] === 0;\n\n  if (isCellEmpty) {\n    arrField[row][column] = randomValue();\n  } else {\n    return newRandomCell();\n  }\n}\n\n// Move element\n\nfunction moveElement(row, column, newRow, newColumn) {\n  arrField[newRow][newColumn] = arrField[row][column];\n  arrField[row][column] = 0;\n}\n\n// Move element and sum\n\nfunction sumElement(row, column, newRow, newColumn) {\n  arrField[newRow][newColumn] *= 2;\n  arrField[row][column] = 0;\n}\n\n// Loop array\n\nfunction processField(callback) {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = 0; column < FIELD_SIZE.columns; column++) {\n      callback(row, column);\n    }\n  }\n}\n\n// Move elements up\n\nfunction moveUp() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    moveUpRow(1, column);\n  }\n}\n\nfunction moveUpRow(startRow, column) {\n  let count = 0;\n\n  for (let row = startRow; row < FIELD_SIZE.rows; row++) {\n    if (arrField[row - 1][column] === 0\n      && arrField[row][column] > 0) {\n      moveElement(row, column, row - 1, column);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    return moveUpRow(startRow, column);\n  }\n}\n\n// Sum elements up\n\nfunction moveUpSum() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    for (let row = 1; row < FIELD_SIZE.rows; row++) {\n      if (arrField[row - 1][column] === arrField[row][column]\n        && arrField[row][column] > 0) {\n        sumElement(row, column, row - 1, column);\n        calculateScore(arrField[row - 1][column]);\n        moveUpRow(row, column);\n      }\n    }\n  }\n}\n\n// Check up\n\nfunction checkUp() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    for (let row = 1; row < FIELD_SIZE.rows; row++) {\n      if (arrField[row][column] > 0\n        && (arrField[row - 1][column] === arrField[row][column]\n          || arrField[row - 1][column] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Move elements down\n\nfunction moveDown() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    moveDownRow(FIELD_SIZE.rows - 1, column);\n  }\n}\n\nfunction moveDownRow(startRow, column) {\n  let count = 0;\n\n  for (let row = startRow; row >= 1; row--) {\n    if (arrField[row][column] === 0\n      && arrField[row - 1][column] > 0) {\n      moveElement(row - 1, column, row, column);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    return moveDownRow(startRow, column);\n  }\n}\n\n// Sum elements down\n\nfunction moveDownSum() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    for (let row = FIELD_SIZE.rows - 1; row >= 1; row--) {\n      if (arrField[row - 1][column] === arrField[row][column]\n        && arrField[row][column] > 0) {\n        sumElement(row, column, row - 1, column);\n        calculateScore(arrField[row - 1][column]);\n        moveDownRow(row, column);\n      }\n    }\n  }\n}\n\n// Check down\n\nfunction checkDown() {\n  for (let column = 0; column < FIELD_SIZE.columns; column++) {\n    for (let row = FIELD_SIZE.rows - 1; row >= 1; row--) {\n      if (arrField[row - 1][column] > 0\n        && (arrField[row][column] === arrField[row - 1][column]\n          || arrField[row][column] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Move elements left\n\nfunction moveLeft() {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    moveLeftColumn(row, 1);\n  }\n}\n\nfunction moveLeftColumn(row, startColumn) {\n  let count = 0;\n\n  for (let column = startColumn; column < FIELD_SIZE.rows; column++) {\n    if (arrField[row][column - 1] === 0\n      && arrField[row][column] > 0) {\n      moveElement(row, column, row, column - 1);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    return moveLeftColumn(row, startColumn);\n  }\n}\n\n// Sum elements left\n\nfunction moveLeftSum() {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = 1; column < FIELD_SIZE.columns; column++) {\n      if (arrField[row][column - 1] === arrField[row][column]\n        && arrField[row][column] > 0) {\n        sumElement(row, column, row, column - 1);\n        calculateScore(arrField[row][column - 1]);\n        moveLeftColumn(row, column);\n      }\n    }\n  }\n}\n\n// Check Left\n\nfunction checkLeft() {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = 1; column < FIELD_SIZE.columns; column++) {\n      if (arrField[row][column] > 0\n        && (arrField[row][column] === arrField[row][column - 1]\n          || arrField[row][column - 1] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Move elements right\n\nfunction moveRight() {\n  for (let row = 0; row < FIELD_SIZE.columns; row++) {\n    moveRightColumn(row, FIELD_SIZE.columns - 1);\n  }\n}\n\nfunction moveRightColumn(row, startColumn) {\n  let count = 0;\n\n  for (let column = startColumn; column >= 1; column--) {\n    if (arrField[row][column] === 0\n      && arrField[row][column - 1] > 0) {\n      moveElement(row, column - 1, row, column);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    return moveRightColumn(row, startColumn);\n  }\n}\n\n// Sum elements right\n\nfunction moveRightSum() {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = FIELD_SIZE.columns - 1; column >= 1; column--) {\n      if (arrField[row][column - 1] === arrField[row][column]\n        && arrField[row][column] > 0) {\n        sumElement(row, column, row, column - 1);\n        calculateScore(arrField[row][column - 1]);\n        moveRightColumn(row, column);\n      }\n    }\n  }\n}\n\n// Check right\n\nfunction checkRight() {\n  for (let row = 0; row < FIELD_SIZE.rows; row++) {\n    for (let column = FIELD_SIZE.columns - 1; column >= 1; column--) {\n      if (arrField[row][column - 1] > 0\n        && (arrField[row][column] === arrField[row][column - 1]\n          || arrField[row][column] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Check lose\n\nfunction isLose() {\n  if (!(checkUp() || checkDown() || checkLeft() || checkRight())) {\n    endGame('lose');\n  }\n}\n\n// Press key\n\nconst arrUp = function(event) {\n  if (controls.querySelector('.start') === null) {\n    if (event.key === ARROWS.up && checkUp()) {\n      moveUp();\n      moveUpSum();\n      newRandomCell();\n      processField(buildGameField);\n      isLose();\n    }\n  }\n};\n\nconst arrDown = function(event) {\n  if (controls.querySelector('.start') === null) {\n    if (event.key === ARROWS.down && checkDown()) {\n      moveDown();\n      moveDownSum();\n      newRandomCell();\n      processField(buildGameField);\n      isLose();\n    }\n  }\n};\n\nconst arrLeft = function(event) {\n  if (controls.querySelector('.start') === null) {\n    if (event.key === ARROWS.left && checkLeft()) {\n      moveLeft();\n      moveLeftSum();\n      newRandomCell();\n      processField(buildGameField);\n      isLose();\n    }\n  }\n};\n\nconst arrRight = function(event) {\n  if (controls.querySelector('.start') === null) {\n    if (event.key === ARROWS.right && checkRight()) {\n      moveRight();\n      moveRightSum();\n      newRandomCell();\n      processField(buildGameField);\n      isLose();\n    }\n  }\n};\n\n// Add keys listener\n\nfunction addKeysListener() {\n  document.addEventListener('keydown', arrUp);\n  document.addEventListener('keydown', arrDown);\n  document.addEventListener('keydown', arrLeft);\n  document.addEventListener('keydown', arrRight);\n}\n\n// Remove keys listener\n\nfunction removeKeysListener() {\n  document.removeEventListener('keydown', arrUp);\n  document.removeEventListener('keydown', arrDown);\n  document.removeEventListener('keydown', arrLeft);\n  document.removeEventListener('keydown', arrRight);\n}\n"]}